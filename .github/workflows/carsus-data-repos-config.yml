name: carsus-data-repos-config

on: 
  workflow_dispatch: 
        
env:
  NBCONVERT_FLAGS: --execute --ExecutePreprocessor.timeout=600 --to html

defaults:
      run:
        shell: bash -l {0}

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: carsus/


  process-data-repo:
    needs: [checkout]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: [carsus-data-cmfgen, carsus-data-kurucz, carsus-data-nist]
    steps:
    #  - name: Checkout Repository
    #    uses: actions/checkout@v2
    #    with:
    #      path: cloned-repo-${{ matrix.repo }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: cloned-repo-${{ matrix.repo }}
          key: ${{ runner.os }}-cache-${{ hashFiles('cloned-repo-${{ matrix.repo }}/**/*.lock') }}

      - run: |
          ls
        
      - run: |
          repo_path="cloned-repo-${{ matrix.repo }}"
          if [ ! -d $repo_path ]] ; then
            echo "Cloning repository ${{ matrix.repo }}..."
            git clone https://github.com/s-rathi/${{ matrix.repo }} $repo_path
          fi

          # chcek for changes an update
          
          cd cloned-repo-${{ matrix.repo }}
          git fetch
          if git diff origin/main --exit-code; then
            echo "No changes found. Using existing clone."
          else
            git checkout origin/main
            echo "Repository updated. Checked out latest changes."
          fi
      - run: |
            ls
  carsus-build:
    needs: [process-data-repo]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
         path: carsus/      

      - name: Setup carsus environment
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            environment-file: carsus/carsus_env3.yml
            activate-environment: carsus
            use-mamba: true

      - name: Install package
        run: pip install -e carsus/

      - run: |
          current_dir="${PWD}"
          echo "curent: $current_dir"
          #cd cloned-repo-carsus-data-cmfgen/atomic/HYD/I
          ls
          cd carsus/
          ls
          cd ../../cloned-repo-carsus-data-nist
          echo "cloned-repo-carsus-data-nist"
          ls
          
      - name: Run notebooks
        run: |
          jupyter nbconvert ${{ env.NBCONVERT_FLAGS }} carsus/docs/tardis_atomdata_ref.ipynb
        env:
          CARSUS_REFDATA: ${{ github.workspace }}/carsus-refdata
        
      - name: Upload Atom Data
        uses: actions/upload-artifact@v3
        with:
          name: atom-data
          path: carsus/docs/kurucz_cd23_cmfgen_Si.h5
